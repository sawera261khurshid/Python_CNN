# -*- coding: utf-8 -*-
"""max1a.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dGR0Q-8bQDEXt3Sie9uTV370i3LCjIoI
"""

import numpy as np
def max_pooling(x, size, mode='max'):
    pool_height, pool_width = size

    output_height = x.shape[0] // pool_height
    output_width = x.shape[1] // pool_width

    # Perform max pooling
    if mode == 'max':
        pooled = np.zeros((output_height, output_width))
        for i in range(output_height):
            for j in range(output_width):
                start_row = i * pool_height
                end_row = start_row + pool_height
                start_col = j * pool_width
                end_col = start_col + pool_width
                pooled[i, j] = np.max(x[start_row:end_row, start_col:end_col])
    elif mode == 'average':
        pooled = np.zeros((output_height, output_width))
        for i in range(output_height):
            for j in range(output_width):
                start_row = i * pool_height
                end_row = start_row + pool_height
                start_col = j * pool_width
                end_col = start_col + pool_width
                pooled[i, j] = np.average(x[start_row:end_row, start_col:end_col])
    else:
        raise ValueError("Invalid pooling mode. Supported modes: 'max', 'average'.")

    return pooled