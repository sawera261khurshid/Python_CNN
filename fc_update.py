# -*- coding: utf-8 -*-
"""FC_update.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j6pZvvoK2mdtl1mnCYyGhlH3ktO7vCMH
"""

import numpy as np

class FC:
    # A standard fully-connected layer with softmax activation.

    def __init__(self, input_len, nodes, dtype=np.float32):
        # We divide by input_len to reduce the variance of our initial values
        self.weights = np.random.randn(input_len, nodes).astype(dtype) / input_len
        self.biases = np.zeros(nodes, dtype=dtype)

    def forward(self, input):
        '''
        Performs a forward pass of the FC layer using the given input.
        Returns a 1d numpy array containing the respective values.
        - input can be any array with any dimensions.
        '''
        self.last_input_shape = input.shape
        input = input.flatten().astype(self.weights.dtype)  # Convert input to the same dtype as weights

        totals = np.dot(input, self.weights) + self.biases
        self.last_totals = totals

        return totals.astype(self.weights.dtype)  # Return the result with the desired dtype

    def backprop(self, d_L_d_t, learn_rate):
        '''
        Performs a backward pass of the softmax layer.
        Returns the loss gradient for this layer's inputs.
        - d_L_d_out is the loss gradient for this layer's outputs.
        - learn_rate is a float.
        '''
        d_L_d_t = d_L_d_t.astype(self.weights.dtype)  # Convert the loss gradient to the same dtype as weights

        # Gradients of totals against weights/biases/input
        d_t_d_w = self.last_input
        d_t_d_b = 1
        d_t_d_inputs = self.weights

        # Gradients of loss against weights/biases/input
        d_L_d_w = np.outer(d_t_d_w, d_L_d_t)
        d_L_d_b = d_L_d_t * d_t_d_b
        d_L_d_inputs = np.dot(d_L_d_t, d_t_d_inputs.T).reshape(self.last_input_shape)

        # Update weights / biases
        self.weights -= learn_rate * d_L_d_w
        self.biases -= learn_rate * d_L_d_b

        return d_L_d_inputs